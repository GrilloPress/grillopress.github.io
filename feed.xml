<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andrew Duckworth</title>
  <subtitle>Designer, artist</subtitle>
  <id>https://grillopress.github.io/</id>
  <link href="https://grillopress.github.io/"/>
  <link href="https://grillopress.github.io/feed.xml" rel="self"/>
  <updated>2019-04-06T08:30:00+01:00</updated>
  <author>
    <name>Andrew Duckworth</name>
  </author>
  <entry>
    <title>Minus interference</title>
    <link rel="alternate" href="https://grillopress.github.io/2019/04/06/minus-interference.html"/>
    <id>https://grillopress.github.io/2019/04/06/minus-interference.html</id>
    <published>2019-04-06T08:30:00+01:00</published>
    <updated>2019-04-07T00:11:07+01:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;Last Tuesday I went to a training session about mentoring.&lt;/p&gt;

&lt;p&gt;There are some new processes if you look after a graduate. The session also covered what made someone a good mentor. And the difference between coaching and mentoring.&lt;/p&gt;

&lt;p&gt;During the break I asked a question which led to one of the speakers talking about an algorithm by Tim Gallwey.&lt;/p&gt;

&lt;pre&gt;performance = ( potential - interference )&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Timothy_Gallwey"&gt;Tim Gallwey&lt;/a&gt; is the author of several coaching books.&lt;/p&gt;

&lt;p&gt;Though this algorithm is too simplistic. It&amp;rsquo;s the type of thing that helps explain a truth. A truth about people, teams and systems.&lt;/p&gt;

&lt;p&gt;The idea is that you&amp;rsquo;re held back from your potential by &amp;ldquo;interference&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;That is, a team&amp;rsquo;s performance is as much how well they manage interference as they are their skills and capabilities.&lt;/p&gt;

&lt;p&gt;Interference can come in different shapes and sizes.&lt;/p&gt;

&lt;p&gt;It can be institutional. Societal opinions. An over-eager minister or competition between teams. Personal demons. Overthinking. Hesitation. Bias.&lt;/p&gt;

&lt;p&gt;The higher volume of distraction. The lower the performance.&lt;/p&gt;

&lt;p&gt;As part of a team entering into a discovery I&amp;rsquo;m keeping this concept in mind.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll have many opportunities to distract ourselves. And lots of oversight and influential people watching us close.&lt;/p&gt;

&lt;p&gt;But whatever happens, my goal will be to make sure we keep interference to a minimum. And those around us help do that too.&lt;/p&gt;

&lt;p&gt;What could you achieve without interference?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>You never know, you know</title>
    <link rel="alternate" href="https://grillopress.github.io/2019/03/26/you-never-know-you-know.html"/>
    <id>https://grillopress.github.io/2019/03/26/you-never-know-you-know.html</id>
    <published>2019-03-26T07:30:00+00:00</published>
    <updated>2019-04-06T17:03:52+01:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;You should always get people outside your project or product to review your work. They&amp;rsquo;ll ask things you haven&amp;rsquo;t thought about. And question things you take for granted.&lt;/p&gt;

&lt;p&gt;A question I got asked recently surprised me.&lt;/p&gt;

&lt;p&gt;It was after talking through a change we made to the live service.&lt;/p&gt;

&lt;p&gt;We had gone from a long list of exceptions to an easier to navigate set of headings and content.&lt;/p&gt;

&lt;p&gt;We had tested the change. And had 40 users (from the age of 13) go through the work with changes here and there.&lt;/p&gt;

&lt;p&gt;We had seen improved understanding. And created an easier reading experience.&lt;/p&gt;

&lt;p&gt;The question asked was &amp;ldquo;how do you know you&amp;rsquo;ve tested with enough users?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The implication seemed to be that we hadn&amp;rsquo;t tested with enough users to &amp;ldquo;really know&amp;rdquo; before going live.&lt;/p&gt;

&lt;p&gt;But you never will.&lt;/p&gt;

&lt;p&gt;You will never &lt;em&gt;know&lt;/em&gt;  that a change is the right one. And you will never know how something will &lt;em&gt;really&lt;/em&gt; work when live.&lt;/p&gt;

&lt;p&gt;You can be confident in your hypothesis, your change.&lt;/p&gt;

&lt;p&gt;You can do things to increase this confidence. And how likely you feel you&amp;rsquo;ll get something right.&lt;/p&gt;

&lt;p&gt;Like testing in realistic context and with a range of users with different abilities and understanding.&lt;/p&gt;

&lt;p&gt;When reviewing changes this is actually a great question to ask yourselves:&lt;/p&gt;

&lt;div class="question"&gt;How likely is it this change will solve [the problem]?&lt;/div&gt;

&lt;p&gt;You can also frame your research around the change to make clear what things would increase your confidence:&lt;/p&gt;

&lt;div class="question"&gt;We&amp;rsquo;ll be more confident in this change when we see users understand that their data can still be shared in certain situations&lt;/div&gt;

&lt;p&gt;When you change your service. You&amp;rsquo;ll never know. So, you keep listening, keep learning and change when you need to.&lt;/p&gt;

&lt;p&gt;That is agile. That is design.&lt;/p&gt;

&lt;p&gt;As a designer your job is to navigate that uncertainty. But you never know, you know.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Do the hard work to make it inclusive</title>
    <link rel="alternate" href="https://grillopress.github.io/2019/03/18/do-the-hard-work-to-make-it-inclusive.html"/>
    <id>https://grillopress.github.io/2019/03/18/do-the-hard-work-to-make-it-inclusive.html</id>
    <published>2019-03-18T20:30:00+00:00</published>
    <updated>2019-03-19T09:53:35+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;Back in August we had a challenge. We had a method of authentication that worked pretty well, but needed an NHS number.&lt;/p&gt;

&lt;p&gt;If you have your NHS number we could be pretty sure to find you.&lt;/p&gt;

&lt;p&gt;But NHS numbers aren’t something that everyone has to hand.&lt;/p&gt;

&lt;p&gt;They should be on letters, prescriptions and the like.&lt;/p&gt;

&lt;p&gt;But not everyone has had a recent appointment. Or keeps their letters. And some letters don’t include the NHS number (even though they should!). Never mind the NHS number being easy to find on a letter.&lt;/p&gt;

&lt;p&gt;Though not a thing some users can’t get. Many users told us that they contacted their GP receptionist and after a few questions for given it. The NHS number represented a significant speed bump.&lt;/p&gt;

&lt;p&gt;Something that stopped users being successful first time. And in the worst cases, a potential barrier.&lt;/p&gt;

&lt;p&gt;Our challenge was to make accessing the service not rely on the NHS number.&lt;/p&gt;

&lt;p&gt;But I didn’t want to throw away our path that worked for many.&lt;/p&gt;

&lt;p&gt;The API we used however offered an alternative. We could get a patient by NHS number, but also by their personal details.&lt;/p&gt;

&lt;p&gt;The details were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;date of birth&lt;/li&gt;
&lt;li&gt;postcode&lt;/li&gt;
&lt;div&gt;and&lt;/div&gt;
&lt;li&gt;gender&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Name and date of birth confronted no significant issues. We knew some users would struggle a little with postcode.&lt;/p&gt;

&lt;p&gt;But the biggest worry was gender.&lt;/p&gt;

&lt;p&gt;The reason the API asked for that was because it was a clinical API.&lt;/p&gt;

&lt;p&gt;It was a requirement for the API. No “wildcard” allowed. We’d need to ask for it.&lt;/p&gt;

&lt;p&gt;We were also told we couldn’t get around this.&lt;/p&gt;

&lt;p&gt;Though we knew many users wouldn’t blink at this question. Our service lets users choose if their data is used for research. We don’t want to embarrass or impede anyone making that choice.&lt;/p&gt;

&lt;p&gt;Our service is for everyone.&lt;/p&gt;

&lt;h2&gt;New hope&lt;/h2&gt;

&lt;p&gt;In a meeting with colleagues from another service I noticed they used the same API. But weren’t asking for gender.&lt;/p&gt;

&lt;p&gt;I pressed hard on how they got around it.&lt;/p&gt;

&lt;p&gt;Email confirmation after the meeting we had an answer.&lt;/p&gt;

&lt;p&gt;We could call the API several times for each gender or category stored.&lt;/p&gt;

&lt;p&gt;The other service would have much higher traffic than ours. We had precedence and I had enough ammunition to get my way.&lt;/p&gt;

&lt;p&gt;So, our service would do the hard work to call the API four times when a user gave us a postcode instead of an NHS number.&lt;/p&gt;

&lt;p&gt;Several prototypes later, 800 a/b tested users later and we had confidence in our design.&lt;/p&gt;

&lt;p&gt;Service redesigned. Service load tested. New way of using the service released.&lt;/p&gt;

&lt;p&gt;Over one third of our users don’t bother with an irrelevant question.&lt;/p&gt;

&lt;p&gt;Our service does the hard work to make it inclusive.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>One thing per page</title>
    <link rel="alternate" href="https://grillopress.github.io/2019/01/31/one-thing.html"/>
    <id>https://grillopress.github.io/2019/01/31/one-thing.html</id>
    <published>2019-01-31T20:30:00+00:00</published>
    <updated>2019-02-11T08:21:50+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;Advice that often causes some debate is doing &amp;ldquo;one thing per page&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.gov.uk/service-manual/design/form-structure#start-with-one-thing-per-page"&gt;advice to start with this pattern&lt;/a&gt; often runs into resistance for internal teams. Or products with &amp;ldquo;expert&amp;rdquo; users.&lt;/p&gt;

&lt;p&gt;Whilst helping run a form workshop for &amp;ldquo;services week&amp;rdquo; this topic featured. Both in the wider room and one to one.&lt;/p&gt;

&lt;p&gt;The argument is that lots of questions will slow down users who have to do a thing 50 times a day.&lt;/p&gt;

&lt;p&gt;This is a fair criticism.&lt;/p&gt;

&lt;p&gt;If your users use an interface everyday, the patterns that work for them may be different.&lt;/p&gt;

&lt;p&gt;For me though, I like to explain the &amp;ldquo;one thing&amp;rdquo; a little differently.&lt;/p&gt;

&lt;p&gt;That is, &amp;ldquo;one thing&amp;rdquo; is a flexible concept. Yes, it can mean one question or one input. But one thing can also mean several inputs but one concept.&lt;/p&gt;

&lt;p&gt;For a user who submits identical claims 50 times a day the whole &amp;ldquo;claim&amp;rdquo; could be one thing. A user who uses your service once a year won&amp;rsquo;t have the whole thing in their head.&lt;/p&gt;

&lt;p&gt;The question isn&amp;rsquo;t &amp;ldquo;should we do one thing or lots of things?&amp;rdquo;. It is establishing what task users want to do. What sized task they can do without having to think.&lt;/p&gt;

&lt;p&gt;The question isn&amp;rsquo;t whether your user should do &amp;ldquo;one thing&amp;rdquo; or not. It is what that one thing means.&lt;/p&gt;

&lt;p&gt;The worst thing you can do though is assume that your users can cope with several things per page without evidence.&lt;/p&gt;

&lt;p&gt;A little while back I reviewed a team&amp;rsquo;s service. They had some serious issues with users struggling to complete their registration process. They tried to cover this with a &amp;ldquo;save and continue&amp;rdquo; button.&lt;/p&gt;

&lt;p&gt;But the solution was solving the symptom.&lt;/p&gt;

&lt;p&gt;The issue was that they were assuming too much. Assuming that their users would understand the questions they were asking.&lt;/p&gt;

&lt;p&gt;They had rejected the &amp;ldquo;one thing per page&amp;rdquo; pattern as needing &amp;ldquo;too many clicks&amp;rdquo;. But had they used it, they would have discovered the questions that users found easy. And those they found hard. Those questions that could grouped. And those that needed another page.&lt;/p&gt;

&lt;p&gt;Users were struggling on the third question into the service. They had assumed their professional users would know the answer to these questions. They didn&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;Start by breaking down what you need from your user into the smallest questions possible. Only deviate when you have good evidence you can group questions together.&lt;/p&gt;

&lt;p&gt;Start with one thing per page. The smallest thing. And only expand when you have clear evidence to do that. But also find out what that &amp;ldquo;one thing&amp;rdquo; means. And the best way to ask it. Whether it is one question or several.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ask a question</title>
    <link rel="alternate" href="https://grillopress.github.io/2019/01/31/asking-questions.html"/>
    <id>https://grillopress.github.io/2019/01/31/asking-questions.html</id>
    <published>2019-01-31T00:00:00+00:00</published>
    <updated>2019-01-31T22:55:32+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;One thing I’m always doing is encouraging people to ask questions.&lt;/p&gt;

&lt;p&gt;Asking why. Asking how.&lt;/p&gt;

&lt;p&gt;It’s fundamental to being a good designer. We provide purpose and direction. But only after questions.&lt;/p&gt;

&lt;p&gt;The questions you ask don’t have to be clever. And they don’t have to have deep purpose beyond knowing a bit more. Getting a bit clearer or checking if you have something right.&lt;/p&gt;

&lt;p&gt;A great example of this recently is one asked by Sam (graduate designer I work with) in the cross-gov community.&lt;/p&gt;

&lt;p&gt;She had been exploring how we could provide our contact centre with a way to speed up creating reports.&lt;/p&gt;

&lt;p&gt;One of the things we wanted to do was make sure we had clear checks that the report about to be created matched the paper form.&lt;/p&gt;

&lt;p&gt;She made a quick sketch flow. Then mocked up a quick screen. As we reviewed it we felt we could probably do better.&lt;/p&gt;

&lt;figure class="noir right"&gt;
  &lt;img src="/images/question.png" alt="A sketch on a sticky note of a question and address."/&gt;
&lt;/figure&gt;

&lt;p&gt;We soon had three versions.&lt;/p&gt;

&lt;p&gt;The screens all asked the user to confirm some personal data matched the request.&lt;/p&gt;

&lt;p&gt;As we considered the best approach I suggested Sam ask if anyone had had to do something similar in the cross-gov slack.&lt;/p&gt;

&lt;p&gt;Turned out lots of people had had to do it. And there were a few variations flying around.&lt;/p&gt;

&lt;p&gt;So much so &lt;a href="https://github.com/alphagov/govuk-design-system-backlog/issues/187"&gt;it&amp;rsquo;s now on the design system backlog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A simple question and we got lots of examples and research back.&lt;/p&gt;

&lt;p&gt;Ask your question. Find out why a process is how it is. See if anyone has tried solving the same problem or created a similar solution.&lt;/p&gt;

&lt;p&gt;And better yet, ask that question publicly so you help everyone else too.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Asking the right question</title>
    <link rel="alternate" href="https://grillopress.github.io/2019/01/20/asking-the-right-question.html"/>
    <id>https://grillopress.github.io/2019/01/20/asking-the-right-question.html</id>
    <published>2019-01-20T00:00:00+00:00</published>
    <updated>2019-01-20T17:41:06+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;The key to getting to a good solution is in asking the right questions.&lt;/p&gt;

&lt;p&gt;Recently my son came into the kitchen where I was cooking. He wanted to ask me how to do something in his Minecraft mod.&lt;/p&gt;

&lt;p&gt;He wanted to know how create a DNA extractor.&lt;/p&gt;

&lt;p&gt;I was in the middle of making some naan breads so couldn&amp;rsquo;t google it for him that second. When I tried to find the answer I couldn&amp;rsquo;t find the extractor. It didn&amp;rsquo;t seem to exist.&lt;/p&gt;

&lt;p&gt;This isn&amp;rsquo;t odd in Minecraft. Most mods aren&amp;rsquo;t well documented.&lt;/p&gt;

&lt;p&gt;Frustrated I told him I couldn&amp;rsquo;t find it. I asked him why he wanted the extractor. What it&amp;rsquo;d let him do. Turned out one of his dinosaurs had died. He wanted to create it again and only had the meat left over from the last one.&lt;/p&gt;

&lt;p&gt;He didn&amp;rsquo;t want a DNA extractor. He wanted his dinosaur back. And he had some raw materials to use but no way of getting a new dinosaur.&lt;/p&gt;

&lt;p&gt;I googled about the dinosaur meat. I found the answer in about 30 seconds. He can use the meat to get the DNA he wanted with tools he already had.&lt;/p&gt;

&lt;p&gt;He was happy. So was I.&lt;/p&gt;

&lt;p&gt;It also made me realise how I should have been asking why he wanted the thing in the first place. What outcome he wanted and why.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not always about being resourceful. It&amp;rsquo;s often about asking the right questions. &lt;/p&gt;
</content>
  </entry>
</feed>
