<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andrew Duckworth</title>
  <subtitle>Designer, artist</subtitle>
  <id>https://grillopress.github.io/</id>
  <link href="https://grillopress.github.io/"/>
  <link href="https://grillopress.github.io/feed.xml" rel="self"/>
  <updated>2020-02-18T07:30:00+00:00</updated>
  <author>
    <name>Andrew Duckworth</name>
  </author>
  <entry>
    <title>Do less</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/02/18/do-less.html"/>
    <id>https://grillopress.github.io/2020/02/18/do-less.html</id>
    <published>2020-02-18T07:30:00+00:00</published>
    <updated>2020-02-18T09:08:28+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;The single most powerful thing to getting great performance from a team is doing less.&lt;/p&gt;

&lt;p&gt;Restricting scope. Adding a constraint.&lt;/p&gt;

&lt;p&gt;Last week I talked a team through some of my discovery work. They&amp;rsquo;re picking up the work for alpha.&lt;/p&gt;

&lt;p&gt;My strongest bit of advice from what they had started with was to do less.&lt;/p&gt;

&lt;p&gt;The discovery made several recommendations. And I could see the team was chomping at the bit to get lots done.&lt;/p&gt;

&lt;p&gt;But in trying to get to the bigger goals they&amp;rsquo;d tried to tackle three or four problems at once.&lt;/p&gt;

&lt;p&gt;With the size of the health and social care sector, even a small problem has immense scale.&lt;/p&gt;

&lt;p&gt;By allowing patients to do simple things like check and update their contact details online we solve multiple needs. Improve the quality of data. And give services better quality data. And confidence in that data.&lt;/p&gt;

&lt;p&gt;We also extract value from processing people are already having to go through.&lt;/p&gt;

&lt;p&gt;The idea is a small service. But doable. And something that can impact 60 million records. And give patients more control.&lt;/p&gt;

&lt;p&gt;By doing less they&amp;rsquo;ve got more chance of having a big impact. Of navigating policy and law. Of getting something live and learning.&lt;/p&gt;

&lt;p&gt;It makes things much clearer. And it also lets you get deeper into things. And you spot opportunities and issues earlier.&lt;/p&gt;

&lt;p&gt;By reducing scope you can also finish work. The teams I see struggling are the ones who get 80% of their work done but can&amp;rsquo;t finish off before the next chunk of work comes along.&lt;/p&gt;

&lt;p&gt;Do less. Get things live. And learn. Then you can evaluate what value there is in doing more or something else.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A retrospective on your retros</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/02/17/a-retro-for-your-retros.html"/>
    <id>https://grillopress.github.io/2020/02/17/a-retro-for-your-retros.html</id>
    <published>2020-02-17T07:30:00+00:00</published>
    <updated>2020-02-18T22:21:20+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;If you&amp;rsquo;ve worked with a software development team you may have done retros. Regular events where teams reflect on what&amp;rsquo;s gone well or not recently.&lt;/p&gt;

&lt;p&gt;Their goal is to play part in creating an accountable team. One that talks honestly to each other. That checks what&amp;rsquo;s happening matches the outcomes they want to achieve.&lt;/p&gt;

&lt;p&gt;Regular team meetings where you can talk to each other about what&amp;rsquo;s working. What isn&amp;rsquo;t are a good part of holding yourself and others accountable.&lt;/p&gt;

&lt;p&gt;But doing retros only gets you and your team so far. They need to help you hold each other to account.&lt;/p&gt;

&lt;p&gt;You can test how useful retros (and similar things) are by asking a few questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you feel heard or talked at?&lt;/li&gt;
&lt;li&gt;Is everything someone else&amp;rsquo;s fault or failing? [The developers, the designers, policy etc.]&lt;/li&gt;
&lt;li&gt;Are solutions thrown around before the problem is completely voiced?&lt;/li&gt;
&lt;li&gt;Does the team come out with any actions?&lt;/li&gt;
&lt;li&gt;Do those actions actually happen?&lt;/li&gt;
&lt;li&gt;Does anything change afterwards?&lt;/li&gt;
&lt;li&gt;Do the same topics or issues keep coming up?&lt;/li&gt;
&lt;li&gt;Do people&amp;rsquo;s real complaints or issues get aired in the retro, or in private conversations?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the answer to these questions makes you feel like retros aren&amp;rsquo;t working. Time to change how your team holds each other accountable.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s time to be honest and clear about how working like you do right now isn&amp;rsquo;t working.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Still waiting for perfect</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/02/16/still-waiting-for-perfect.html"/>
    <id>https://grillopress.github.io/2020/02/16/still-waiting-for-perfect.html</id>
    <published>2020-02-16T07:30:00+00:00</published>
    <updated>2020-02-18T08:36:44+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;You have a great idea. A research technique or plan. Or an idea for a prototype.&lt;/p&gt;

&lt;p&gt;With just a few more things in place you&amp;rsquo;d be able to do it. With just more discussion you&amp;rsquo;d be able to get it just right. And then you can do that thing.&lt;/p&gt;

&lt;p&gt;But it won&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll be waiting for perfect forever.&lt;/p&gt;

&lt;p&gt;Not only will it not happen but it starts blocking other similar things from delivering value. From getting stuff done.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s nothing more toxic than perfect. It blocks getting small stuff done. It means nothing similar can be completed. And nothing else learned. Because &amp;ldquo;why are we doing this first, when we could do this [perfect] thing?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;And because perfect is always waiting for that last thing to finish it off, it&amp;rsquo;s always out of date. So when things do align you&amp;rsquo;re getting back to almost done. And never done.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re struggling with waiting for perfect ask yourselves and colleagues what&amp;rsquo;s stopping you from doing it right now.&lt;/p&gt;

&lt;p&gt;Ask yourself if there&amp;rsquo;s a way to do it even imperfectly in the next two weeks.&lt;/p&gt;

&lt;p&gt;Get it done in an imperfect way and learn something. Once you test something you&amp;rsquo;ll find perfect wasn&amp;rsquo;t real anyway.&lt;/p&gt;

&lt;p&gt;Learn something. Stop waiting for perfect.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Making outcomes clear</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/02/12/making-outcomes-clear.html"/>
    <id>https://grillopress.github.io/2020/02/12/making-outcomes-clear.html</id>
    <published>2020-02-12T07:30:00+00:00</published>
    <updated>2020-02-18T22:18:34+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;A core component of a good team, and accountability, is being set up for success. For yourself. And those around you.&lt;/p&gt;

&lt;p&gt;Being set up for success is about having a clear sense of the outcomes you want. And the capability to deliver them.&lt;/p&gt;

&lt;p&gt;You can measure this with some questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Am I clear what I am looking to achieve?&lt;/li&gt;
&lt;li&gt;Are others around me clear what I am trying to do?&lt;/li&gt;
&lt;li&gt;Do I have the skills to achieve what I need to do?&lt;/li&gt;
&lt;li&gt;If I do not have the skills, do I have a plan to develop them? Or access to resources that mean this doesn&amp;rsquo;t matter?&lt;/li&gt;
&lt;li&gt;Do I know when I am done? When I achieved what I want?&lt;/li&gt;
&lt;li&gt;Would other people agree with that measurement?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Good answers to these questions will involve good communication between you and others. And knowing how things get &amp;ldquo;done&amp;rdquo; (If that is vague where you work. It&amp;rsquo;s worth mapping it out).&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll also have to be honest about your limits. Something I have always struggled with (who doesn&amp;rsquo;t want to be the person who can do it all?).&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s hard work.&lt;/p&gt;

&lt;p&gt;But being clear on the why and how something&amp;rsquo;s going to get done is how you create accountability. And with a clear way we can measure success, everyone is able to help judge and support each other to succeed.&lt;/p&gt;

&lt;p&gt;Make it clear what outcomes you&amp;rsquo;re trying to achieve. And how you&amp;rsquo;re going to do that.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>For professional users</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/02/10/for-pro-users.html"/>
    <id>https://grillopress.github.io/2020/02/10/for-pro-users.html</id>
    <published>2020-02-10T07:30:00+00:00</published>
    <updated>2020-02-18T22:46:45+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;Every time I hear the phrase &amp;ldquo;professional user&amp;rdquo; my heart sinks a little.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s nearly always a Trojan horse for lazy thinking and assumptions.&lt;/p&gt;

&lt;p&gt;The type of phrase that gets combined with things like more training materials, better comms leaflets and pages jam packed with noise. Or questions about how accessible we really need to make something.&lt;/p&gt;

&lt;p&gt;Just because your user is paid to do a thing, doesn&amp;rsquo;t mean the thing should be difficult. Or inaccessible.&lt;/p&gt;

&lt;p&gt;A common issue I hear is about having multiple things on a page. Rather than splitting up a journey.&lt;/p&gt;

&lt;p&gt;But whether someone is paid to do a thing or not, doesn&amp;rsquo;t tell you anything.&lt;/p&gt;

&lt;p&gt;When it comes to interfaces for professionals teams need to ask:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is your user doing this thing 50 times a day? Or once a month? Or lots of times in one month then potentially never again?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grillopress.github.io/2019/01/31/one-thing.html"&gt;What is a single thing to this user&lt;/a&gt;. One question or one whole record or case?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a user does a thing 50 times a day, you can make things more compact. More dense. (Though it may also be worth thinking how you can do most of that 50 things for them). But this doesn&amp;rsquo;t mean more complicated.&lt;/p&gt;

&lt;p&gt;But you also need to respect the task they&amp;rsquo;re doing. And not just throw 8 conceptually related things at the page.&lt;/p&gt;

&lt;p&gt;But not all professional-facing services are like this. Though they&amp;rsquo;re commonly designed like they are.&lt;/p&gt;

&lt;p&gt;A while back I helped review a product which was for professionals. The team assumed everything on one page would be more efficient. It was not.&lt;/p&gt;

&lt;p&gt;Their users only did this part once a year. They were domain experts but would never use the system to be experts with it. They would visit several times in a short period but not for another 9-10 months.&lt;/p&gt;

&lt;p&gt;Users completed about two fields in to a page before they had to quit.&lt;/p&gt;

&lt;p&gt;They had an assumption and they hadn&amp;rsquo;t tested it until they had built a complete product. They had spent a lot of money. And they&amp;rsquo;re going to have to spend a lot more unpicking work or patching it up.&lt;/p&gt;

&lt;p&gt;Just because someone is paid to use your software, doesn&amp;rsquo;t mean they&amp;rsquo;ll be able to use it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Document as part of your process</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/01/20/document-as-part-your-process.html"/>
    <id>https://grillopress.github.io/2020/01/20/document-as-part-your-process.html</id>
    <published>2020-01-20T07:30:00+00:00</published>
    <updated>2020-02-18T08:34:43+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;Don&amp;rsquo;t spend countless hours documenting stuff after doing work in ways that no one will read or use.&lt;/p&gt;

&lt;p&gt;Make it part of your process.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve sketched several ideas, take a photo. If you&amp;rsquo;ve thought deeply about an approach. Write a line or two.&lt;/p&gt;

&lt;p&gt;If you can explain a solution in person, record yourself. And get the audio or a transcript added to a ticket or folder.&lt;/p&gt;

&lt;p&gt;Another way to make it part of your process is to use it as an editorial and quality checking process.&lt;/p&gt;

&lt;p&gt;Recently I was making a map of the prototype were testing soon. It&amp;rsquo;s an integration with an online consultation tool.&lt;/p&gt;

&lt;p&gt;It was a bunch of screenshots, arrows and digital sticky notes.&lt;/p&gt;

&lt;p&gt;But rather than a laborious process of documenting work that&amp;rsquo;s already delivered value. It&amp;rsquo;s a chance to review.&lt;/p&gt;

&lt;p&gt;As you document you can ask yourself questions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why this way?&lt;/li&gt;
&lt;li&gt;What things are we confident about? And what are we not?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even better. Get the whole team together and do it together.&lt;/p&gt;

&lt;p&gt;Documenting your work means it can be visible. It&amp;rsquo;s not the end of the story. You&amp;rsquo;ll have to work to make it sharable. Findable and digestible. But it&amp;rsquo;ll make your work better. And you better able to answer questions when things get made.&lt;/p&gt;

&lt;p&gt;Work to make your work visible. Make it part of your process.&lt;/p&gt;
</content>
  </entry>
</feed>
