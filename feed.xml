<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andrew Duckworth</title>
  <subtitle>Designer, artist</subtitle>
  <id>https://grillopress.github.io/</id>
  <link href="https://grillopress.github.io/"/>
  <link href="https://grillopress.github.io/feed.xml" rel="self"/>
  <updated>2020-12-22T07:30:00+00:00</updated>
  <author>
    <name>Andrew Duckworth</name>
  </author>
  <entry>
    <title>A common mistake teams make is designing for a context their users don't have</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/12/22/designing-for-context-users-dont-have.html"/>
    <id>https://grillopress.github.io/2020/12/22/designing-for-context-users-dont-have.html</id>
    <published>2020-12-22T07:30:00+00:00</published>
    <updated>2020-12-22T20:01:00+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;Under time pressure it’s easy to design a service that works for those that understand a problem. But not those that do not.&lt;/p&gt;

&lt;p&gt;In the last week or so a team released a question in a service that made sense to people who were doing something daily. But, how the question was written meant that people who did it once a week thought it applied to them. It did not.&lt;/p&gt;

&lt;p&gt;The team were working under intense pressure. And getting a true outside perspective was hard. They lost sight of the fact that the large majority of the service’s users wouldn’t know the context of their work. Their policy and their question.&lt;/p&gt;

&lt;p&gt;People answered wrong.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s easy to make this mistake. We&amp;rsquo;ve all made it.&lt;/p&gt;

&lt;p&gt;There can be many ways a team develops this blindspot:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Overconfidence&lt;/li&gt;
&lt;li&gt;Lack of time&lt;/li&gt;
&lt;li&gt;Last minute changes to scope&lt;/li&gt;
&lt;li&gt;Restrictions who you can talk to&lt;/li&gt;
&lt;li&gt;User research only with users with knowledge of a policy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a few questions you can ask yourself or your team to try and guard against making this mistake. Such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is this service used by people who don’t need to see this question/feature? &lt;/li&gt;
&lt;li&gt;What number of people will understand this question? &lt;/li&gt;
&lt;li&gt;Does this question or flow cater to the majority or a minority of journeys?&lt;/li&gt;
&lt;li&gt;Is how we are wording a question presume a certain knowledge? And is that knowledge going to be common amongst our users? &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When tasked with rapidly adding an important new journey or new feature it can be easy to give the new thing massive prominence. But new does not mean it’s something that the majority will use. Nor understand.&lt;/p&gt;

&lt;p&gt;If you can, explore your new feature or question with those that understand. And those that don’t. Your biggest issues will always come from those that don’t understand. From those who don’t match the context you expect.&lt;/p&gt;

&lt;p&gt;At the very least ask yourself, is a feature or question something that the majority will know about.&lt;/p&gt;

&lt;p&gt;If it is not, try to restrict who sees it. Or guard the question by optimising for the 80% journey. Not the minority.&lt;/p&gt;

&lt;p&gt;Understand if your design works for those without context.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Let your headings do the hard work</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/07/02/let-your-headings-do-the-hard-work.html"/>
    <id>https://grillopress.github.io/2020/07/02/let-your-headings-do-the-hard-work.html</id>
    <published>2020-07-02T08:30:00+01:00</published>
    <updated>2020-07-02T22:14:40+01:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;The most common improvement I tell teams to make is to tell the user what they need to do in the h1.&lt;/p&gt;

&lt;p&gt;Your h1 will be one of the first things that a user reads. It frames the whole page and everything inside it.&lt;/p&gt;

&lt;p&gt;Though teams know this, I often see the most important thing buried in a paragraph somewhere else. Or in some colourful box trying to compete against the h1 for attention.&lt;/p&gt;

&lt;p&gt;Rather than competing against your h1 by using callout boxes. Let your heading do the hard work.&lt;/p&gt;

&lt;p&gt;If a service is unavailable, or no results were found, put that in the h1.&lt;/p&gt;

&lt;h2&gt;Beyond questions&lt;/h2&gt;

&lt;p&gt;When you only have one question on the page, it can be easier for teams to be clear what the user needs to do.&lt;/p&gt;

&lt;p&gt;Which is why &lt;a href="/2019/01/31/one-thing.html"&gt;doing one thing per page&lt;/a&gt; makes it easier to be clear to your user what they need to do.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is not to say I haven&amp;rsquo;t seen many teams have a h1 that is different to the question and input on a page. If you find yourself doing this. Make the h1 the question.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But sometimes you need to provide several options. Or more information to support a question.&lt;/p&gt;

&lt;p&gt;When you&amp;rsquo;re not writing a heading as a question. Use a verb in your heading to help the user know what you&amp;rsquo;re asking them to do. For example check, enter, tell, select or choose&lt;/p&gt;

&lt;p&gt;Doing this makes it clear that you want the users to do something. And what it is that you want them to do.&lt;/p&gt;

&lt;p&gt;When you don&amp;rsquo;t want the user to do something, but need them to know something. Make the h1 tell the main story. Do not bury the important details. Tell them their message has been sent, appointment cancelled or that you have refunded them £6.99.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t make your h1 compete with the important details. Make it &lt;em&gt;the&lt;/em&gt; important thing. And never leave the user guessing that you want them to do a thing.&lt;/p&gt;

&lt;p&gt;Let your headings do the hard work&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Find a way of having presence</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/06/29/having-presence.html"/>
    <id>https://grillopress.github.io/2020/06/29/having-presence.html</id>
    <published>2020-06-29T08:30:00+01:00</published>
    <updated>2020-07-02T21:43:30+01:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;Working in a team it’s important to find a way of having presence&lt;/p&gt;

&lt;p&gt;It can be easy to think presence is about being around a lot. Always connected or online.&lt;/p&gt;

&lt;p&gt;It’s not. It’s you and your team having a sense of each other. And what you’re up to. Or not.&lt;/p&gt;

&lt;p&gt;Presence can be being online together. But presence can also be silent. And a feeling of connection.&lt;/p&gt;

&lt;p&gt;Strong presence can be a hard won thing but it’s built through simple things.&lt;/p&gt;

&lt;p&gt;It’s clear communication when you’re heads down, not around or what you’re tackling.&lt;/p&gt;

&lt;p&gt;It’s doing the work to make your efforts open and collaborative.&lt;/p&gt;

&lt;p&gt;At it’s most simple it’s:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Making clear what you’re tackling that day or week&lt;/li&gt;
&lt;li&gt;Telling people when you’re around&lt;/li&gt;
&lt;li&gt;Being clear on what you can handle&lt;/li&gt;
&lt;li&gt;Asking for help or a second opinion. And willing to offer a second opinion&lt;/li&gt;
&lt;li&gt;Speaking up when things aren’t clear&lt;/li&gt;
&lt;li&gt;Being able to say why you’ve done what you’ve done&lt;/li&gt;
&lt;li&gt;Being clear why you&amp;rsquo;ve done what you&amp;rsquo;ve done&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It can be daunting to make yourself heard and your boundaries obvious as a junior colleague. My advice is always start with when you’re around or not. And the rest can follow.&lt;/p&gt;

&lt;p&gt;You do not have to be available all day and at every hour. Nor do you need to have your camera on and always be on a call to have presence.&lt;/p&gt;

&lt;p&gt;Right now that’s the biggest mistake teams are making. The need to always be online to get a sense of presence. But meeting notes written up, a prototype or a question in a thread will do much more for your team’s presence. Your team’s ability to sense what each other is doing.&lt;/p&gt;

&lt;p&gt;Presence is just a sense that people know you’re around and what you’re doing.&lt;/p&gt;

&lt;p&gt;Be clear on what you’re tackling. When you’re around or not. Find a way of having presence&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A good question isn’t going to magic away a terrible policy or an unintuitive process</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/05/06/clear-questions.html"/>
    <id>https://grillopress.github.io/2020/05/06/clear-questions.html</id>
    <published>2020-05-06T08:30:00+01:00</published>
    <updated>2020-05-13T20:08:55+01:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;You can only do so much.&lt;/p&gt;

&lt;p&gt;When your roof is leaking, improving your form&amp;rsquo;s questions is like changing carpets. Yes you’ll need new carpets, but it’s best to fix the hole in the roof first.&lt;/p&gt;

&lt;p&gt;This is often what teams are asked to do. That or provide waterproof carpets.&lt;/p&gt;

&lt;p&gt;A service I worked on a couple of years ago suffered from this problem. The team made the service easier to use. Faster to get through. And findable. But it didn’t fix the more structural issues.&lt;/p&gt;

&lt;p&gt;If you find yourself in a similar position be clear about the limits of what you can do.&lt;/p&gt;

&lt;p&gt;But also don’t lose heart.&lt;/p&gt;

&lt;p&gt;What a good question or clear content can do is highlight how odd a policy or unintuitive a process is. And that can help you make an argument to rethink a policy or process.&lt;/p&gt;

&lt;p&gt;A good question isn’t going to magic away a terrible policy or an unintuitive process. But it helps shine a light on it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Do less</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/02/18/do-less.html"/>
    <id>https://grillopress.github.io/2020/02/18/do-less.html</id>
    <published>2020-02-18T07:30:00+00:00</published>
    <updated>2020-02-18T09:08:28+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;The single most powerful thing to getting great performance from a team is doing less.&lt;/p&gt;

&lt;p&gt;Restricting scope. Adding a constraint.&lt;/p&gt;

&lt;p&gt;Last week I talked a team through some of my discovery work. They&amp;rsquo;re picking up the work for alpha.&lt;/p&gt;

&lt;p&gt;My strongest bit of advice from what they had started with was to do less.&lt;/p&gt;

&lt;p&gt;The discovery made several recommendations. And I could see the team was chomping at the bit to get lots done.&lt;/p&gt;

&lt;p&gt;But in trying to get to the bigger goals they&amp;rsquo;d tried to tackle three or four problems at once.&lt;/p&gt;

&lt;p&gt;With the size of the health and social care sector, even a small problem has immense scale.&lt;/p&gt;

&lt;p&gt;By allowing patients to do simple things like check and update their contact details online we solve multiple needs. Improve the quality of data. And give services better quality data. And confidence in that data.&lt;/p&gt;

&lt;p&gt;We also extract value from processing people are already having to go through.&lt;/p&gt;

&lt;p&gt;The idea is a small service. But doable. And something that can impact 60 million records. And give patients more control.&lt;/p&gt;

&lt;p&gt;By doing less they&amp;rsquo;ve got more chance of having a big impact. Of navigating policy and law. Of getting something live and learning.&lt;/p&gt;

&lt;p&gt;It makes things much clearer. And it also lets you get deeper into things. And you spot opportunities and issues earlier.&lt;/p&gt;

&lt;p&gt;By reducing scope you can also finish work. The teams I see struggling are the ones who get 80% of their work done but can&amp;rsquo;t finish off before the next chunk of work comes along.&lt;/p&gt;

&lt;p&gt;Do less. Get things live. And learn. Then you can evaluate what value there is in doing more or something else.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A retrospective on your retros</title>
    <link rel="alternate" href="https://grillopress.github.io/2020/02/17/a-retro-for-your-retros.html"/>
    <id>https://grillopress.github.io/2020/02/17/a-retro-for-your-retros.html</id>
    <published>2020-02-17T07:30:00+00:00</published>
    <updated>2020-02-18T22:21:20+00:00</updated>
    <author>
      <name>Andrew Duckworth</name>
    </author>
    <content type="html">&lt;p&gt;If you&amp;rsquo;ve worked with a software development team you may have done retros. Regular events where teams reflect on what&amp;rsquo;s gone well or not recently.&lt;/p&gt;

&lt;p&gt;Their goal is to play part in creating an accountable team. One that talks honestly to each other. That checks what&amp;rsquo;s happening matches the outcomes they want to achieve.&lt;/p&gt;

&lt;p&gt;Regular team meetings where you can talk to each other about what&amp;rsquo;s working. What isn&amp;rsquo;t are a good part of holding yourself and others accountable.&lt;/p&gt;

&lt;p&gt;But doing retros only gets you and your team so far. They need to help you hold each other to account.&lt;/p&gt;

&lt;p&gt;You can test how useful retros (and similar things) are by asking a few questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you feel heard or talked at?&lt;/li&gt;
&lt;li&gt;Is everything someone else&amp;rsquo;s fault or failing? [The developers, the designers, policy etc.]&lt;/li&gt;
&lt;li&gt;Are solutions thrown around before the problem is completely voiced?&lt;/li&gt;
&lt;li&gt;Does the team come out with any actions?&lt;/li&gt;
&lt;li&gt;Do those actions actually happen?&lt;/li&gt;
&lt;li&gt;Does anything change afterwards?&lt;/li&gt;
&lt;li&gt;Do the same topics or issues keep coming up?&lt;/li&gt;
&lt;li&gt;Do people&amp;rsquo;s real complaints or issues get aired in the retro, or in private conversations?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the answer to these questions makes you feel like retros aren&amp;rsquo;t working. Time to change how your team holds each other accountable.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s time to be honest and clear about how working like you do right now isn&amp;rsquo;t working.&lt;/p&gt;
</content>
  </entry>
</feed>
